[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "velro-backend"
version = "1.0.0"
description = "Velro AI-powered creative platform - Backend API"
readme = "README.md"
license = {text = "PROPRIETARY"}
authors = [
    {name = "Velro Team", email = "dev@velro.ai"},
]
keywords = ["velro", "ai", "creative", "backend", "fastapi"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: Other/Proprietary License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Framework :: FastAPI",
]
requires-python = ">=3.9"
dependencies = [
    "fastapi>=0.104.0",
    "uvicorn[standard]>=0.24.0",
    "pydantic>=2.5.0",
    "pydantic-settings>=2.1.0",
    "supabase>=2.0.0",
    "httpx>=0.25.0",
    "redis>=5.0.0",
    "celery>=5.3.0",
    "structlog>=23.2.0",
    "python-multipart>=0.0.6",
    "python-jose[cryptography]>=3.3.0",
    "passlib[bcrypt]>=1.7.4",
    "slowapi>=0.1.9",
    "python-dotenv>=1.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.11.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.7.0",
    "pre-commit>=3.5.0",
    "httpx>=0.25.0",
]

[project.urls]
Homepage = "https://github.com/audithero/velro-backend"
Repository = "https://github.com/audithero/velro-backend.git"
Issues = "https://github.com/audithero/velro-backend/issues"

[tool.hatch.build.targets.wheel]
packages = ["src"]

[tool.mypy]
python_version = "3.9"
strict = true
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_any_generics = true
no_implicit_reexport = true
show_error_codes = true

# Enforce layering rules
[[tool.mypy.overrides]]
module = "routers.*"
disallow_any_decorated = true

[[tool.mypy.overrides]]
module = "repositories.*"
# Repositories cannot import from services or routers
disallow_any_unimported = true

[[tool.mypy.overrides]]
module = "services.*"
# Services cannot import from routers
disallow_any_unimported = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=main",
    "--cov=routers",
    "--cov=services", 
    "--cov=repositories",
    "--cov=models",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-fail-under=80"
]

[tool.black]
line-length = 88
target-version = ['py39']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 88
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "W503"]
exclude = [
    ".git",
    "__pycache__",
    "venv",
    ".venv",
    "build",
    "dist",
    "*.egg-info",
]