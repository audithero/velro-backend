[tool:pytest]
# Pytest configuration for VELRO backend testing

# Test discovery
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Output options
addopts = 
    --verbose
    --tb=short
    --strict-markers
    --strict-config
    --cov=.
    --cov-report=html:htmlcov
    --cov-report=term-missing
    --cov-report=json:coverage.json
    --cov-fail-under=60
    --cov-branch
    --junit-xml=test-results.xml

# Coverage configuration
cov_opts = 
    --cov-config=.coveragerc

# Markers for test categorization
markers =
    unit: Unit tests
    integration: Integration tests
    slow: Slow tests
    auth: Authentication tests
    database: Database tests
    api: API endpoint tests
    security: Security tests
    performance: Performance tests

# Minimum version
minversion = 6.0

# Test session configuration
console_output_style = progress
junit_logging = all
junit_log_passing_tests = true

# Asyncio configuration
asyncio_mode = auto

# Filter warnings
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore:.*unclosed.*:ResourceWarning

# Test timeout
timeout = 300
timeout_method = thread