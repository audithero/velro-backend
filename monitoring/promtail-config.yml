server:
  http_listen_port: 9080
  grpc_listen_port: 0

positions:
  filename: /tmp/positions.yaml

clients:
  - url: http://loki:3100/loki/api/v1/push

scrape_configs:
  # Velro application logs
  - job_name: velro-app
    static_configs:
      - targets:
          - localhost
        labels:
          job: velro-backend
          __path__: /var/log/velro/velro_app*.log

  # Authorization audit logs
  - job_name: velro-audit
    static_configs:
      - targets:
          - localhost
        labels:
          job: velro-audit
          log_type: audit
          __path__: /var/log/velro/audit/*.log

  # Security logs
  - job_name: velro-security
    static_configs:
      - targets:
          - localhost
        labels:
          job: velro-security
          log_type: security
          __path__: /var/log/velro/security/*.log

  # Performance logs
  - job_name: velro-performance
    static_configs:
      - targets:
          - localhost
        labels:
          job: velro-performance
          log_type: performance
          __path__: /var/log/velro/performance/*.log

  # System logs (optional)
  - job_name: system
    static_configs:
      - targets:
          - localhost
        labels:
          job: system
          __path__: /var/log/syslog

  # Docker container logs
  - job_name: docker
    docker_sd_configs:
      - host: unix:///var/run/docker.sock
        refresh_interval: 5s
    relabel_configs:
      - source_labels: ['__meta_docker_container_name']
        regex: '/(.*)'
        target_label: 'container'
      - source_labels: ['__meta_docker_container_log_stream']
        target_label: 'logstream'
      - source_labels: ['__meta_docker_container_label_logging']
        target_label: 'logging'

pipeline_stages:
  # JSON log parsing for structured logs
  - json:
      expressions:
        timestamp: timestamp
        level: level
        logger: logger
        message: message
        event_type: event_type
        user_id: user_id
        source_ip: source_ip
        endpoint: endpoint
        duration_ms: duration_ms

  # Extract timestamp
  - timestamp:
      source: timestamp
      format: RFC3339

  # Add labels based on log content
  - labels:
      level:
      event_type:
      endpoint:

  # Parse authorization metrics from logs
  - regex:
      expression: 'AUTH-(?P<auth_result>SUCCESS|DENIED|ERROR)'
      source: message
  - labels:
      auth_result:

  # Parse security events
  - regex:
      expression: 'SECURITY VIOLATION: (?P<violation_type>[^\s]+)'
      source: message
  - labels:
      violation_type:

  # Extract performance metrics
  - regex:
      expression: 'duration: (?P<duration>\d+)ms'
      source: message
  - labels:
      duration:

  # Filter sensitive information
  - replace:
      expression: 'user_id":\s*"[^"]*"'
      replace: 'user_id":"[REDACTED]"'
      source: message

  # Output formatting
  - output:
      source: message